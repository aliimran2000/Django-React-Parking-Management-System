{"ast":null,"code":"(function (root, factory) {\n  // Detect the environment of usage\n  var isCJS = typeof module !== \"undefined\" && module.exports,\n      isAMD = typeof define === 'function' && typeof define.amd === 'object' && define.amd;\n\n  if (isCJS) {\n    var _ = require(\"underscore\");\n\n    module.exports = factory(root, _);\n  } else if (isAMD) {\n    define(['underscore'], function (_) {\n      return factory(root, _);\n    });\n  } else {\n    root.Validator = factory(root, root._);\n  }\n})(this, function (global, _) {\n  \"use strict\";\n\n  var Validator = function (options) {\n    options || (options = {});\n\n    if (options.rules) {\n      _.extend(this.rules, options.rules);\n    }\n  };\n\n  Validator.prototype = function () {\n    // Common value checker\n    var valueExists = function (value) {\n      return !(_.isUndefined(value) || _.isNull(value));\n    };\n\n    return {\n      constructor: Validator,\n      validate: function (value, rules, options) {\n        options || (options = {});\n        var self = this,\n            valuesList = !_.isObject(value) ? {\n          __single__: value\n        } : value,\n            rulesList = !_.isObject(value) ? {\n          __single__: rules\n        } : rules,\n            errorsList = {};\n\n        _.each(rulesList, function (rules, field) {\n          var errors = errorsList[field] = [],\n              value = _.result(valuesList, field),\n              // We pass reporting, if value is null or undefined, and required rule is set to FALSE\n          mustReport = !(valueExists(value) === false && _.has(rules, 'required') === true && _.result(rules, 'required') === false);\n\n          mustReport && _.each(rules, function (standard, rule) {\n            if (_.has(self.rules, rule)) {\n              if (self.rules[rule].call(self, value, standard, valuesList) === false) {\n                errors.push({\n                  value: value,\n                  rule: rule,\n                  standard: standard\n                });\n              }\n            } else {\n              console && console.warn(\"Validation rule '%s' is not exists\", rule);\n            }\n          });\n        });\n\n        return !_.isObject(value) ? errorsList.__single__ : errorsList;\n      },\n      rules: {\n        \"email\": function (value, standard) {\n          var regexp = new RegExp(\"^[a-z0-9._%-]+@[a-z0-9.-]*[a-z0-9]{1}\\.[a-z]{2,4}$\", \"i\");\n          return this.rules.regexp(value, regexp) == standard;\n        },\n        \"russians\": function (value, standard) {\n          var regexp = /^[А-Яа-яёЁ\\W]$/i;\n          return this.rules.regexp(value, regexp) == standard;\n        },\n        \"string\": function (value, standard) {\n          //var regexp = /^([^\\\"\\\\]*|\\\\([\"\\\\\\/bfnrt]{1}|u[a-f0-9]{4}))*$/;\n          return typeof value == \"string\";\n        },\n        \"boolean\": function (value, standard) {\n          return typeof value == \"boolean\" && standard === true;\n        },\n        \"number\": function (value, standard) {\n          //var regexp = /^-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?$/;\n          return typeof value == \"number\" && standard == true;\n        },\n        \"integer\": function (value, standard) {\n          return typeof value == \"number\" && value % 1 == 0 && standard == true;\n        },\n        \"regexp\": function (value, standard) {\n          var regexp = standard instanceof RegExp ? standard : new RegExp(standard);\n\n          if (typeof value == 'string') {\n            return regexp.test(value);\n          } else {\n            return false;\n          }\n        },\n        \"enum\": function (value, standard) {\n          if (standard instanceof Array) {\n            return _.indexOf(standard, value) != -1;\n          } else {\n            return false;\n          }\n        },\n        \"minimum\": function (value, standard) {\n          if (!this.rules.number.call(this, value, true)) {\n            return false;\n          }\n\n          var number = parseInt(value, 10);\n          return number >= standard;\n        },\n        \"maximum\": function (value, standard) {\n          if (!this.rules.number.call(this, value, true)) {\n            return false;\n          }\n\n          var number = parseInt(value, 10);\n          return number <= standard;\n        },\n        \"minlength\": function (value, standard) {\n          if (typeof value == 'string') {\n            return value.length >= standard;\n          }\n\n          return false;\n        },\n        \"maxlength\": function (value, standard) {\n          if (typeof value == 'string') {\n            return value.length <= standard;\n          }\n\n          return false;\n        },\n        \"required\": function (value, standard) {\n          if (standard === true) {\n            return valueExists(value);\n          }\n\n          return true;\n        }\n      }\n    };\n  }();\n\n  var JSONSchemaConverter = function () {};\n\n  JSONSchemaConverter.prototype = function () {\n    var RULES = {\n      STRING: \"string\",\n      NUMBER: \"number\",\n      INTEGER: \"integer\",\n      BOOLEAN: \"boolean\",\n      REGEXP: \"regexp\",\n      MINIMUM: \"minimum\",\n      MAXIMUM: \"maximum\",\n      MIN_LENGTH: \"minlength\",\n      MAX_LENGTH: \"maxlength\",\n      REQUIRED: \"required\",\n      ENUMERATION: \"enum\"\n    };\n    var SCHEMA_VALIDATIONS = {\n      TYPE: \"type\",\n      MINIMUM: \"minimum\",\n      MAXIMUM: \"maximum\",\n      MIN_LENGTH: \"minLength\",\n      MAX_LENGTH: \"maxLength\",\n      REGEXP: \"pattern\",\n      REQUIRED: \"required\",\n      ENUMERATION: \"enum\"\n    };\n    var SCHEMA_TYPES = {\n      STRING: \"string\",\n      NUMBER: \"number\",\n      INTEGER: \"integer\",\n      BOOLEAN: \"boolean\"\n    };\n\n    var defaultProcessor = function () {\n      var map = {};\n      map[SCHEMA_VALIDATIONS.MINIMUM] = RULES.MINIMUM;\n      map[SCHEMA_VALIDATIONS.MAXIMUM] = RULES.MAXIMUM;\n      map[SCHEMA_VALIDATIONS.MIN_LENGTH] = RULES.MIN_LENGTH;\n      map[SCHEMA_VALIDATIONS.MAX_LENGTH] = RULES.MAX_LENGTH;\n      map[SCHEMA_VALIDATIONS.REGEXP] = RULES.REGEXP;\n      map[SCHEMA_VALIDATIONS.ENUMERATION] = RULES.ENUMERATION;\n      return function (value, rule) {\n        return {\n          rule: map[rule],\n          standard: value\n        };\n      };\n    }();\n\n    var processors = {};\n\n    processors[SCHEMA_VALIDATIONS.TYPE] = function () {\n      var map = {};\n      map[SCHEMA_TYPES.STRING] = RULES.STRING;\n      map[SCHEMA_TYPES.NUMBER] = RULES.NUMBER;\n      map[SCHEMA_TYPES.INTEGER] = RULES.INTEGER;\n      map[SCHEMA_TYPES.BOOLEAN] = RULES.BOOLEAN;\n      return function (value) {\n        return {\n          rule: map[value],\n          standard: true\n        };\n      };\n    }();\n\n    processors[SCHEMA_VALIDATIONS.MINIMUM] = defaultProcessor;\n    processors[SCHEMA_VALIDATIONS.MAXIMUM] = defaultProcessor;\n    processors[SCHEMA_VALIDATIONS.MIN_LENGTH] = defaultProcessor;\n    processors[SCHEMA_VALIDATIONS.MAX_LENGTH] = defaultProcessor;\n    processors[SCHEMA_VALIDATIONS.REGEXP] = defaultProcessor;\n    processors[SCHEMA_VALIDATIONS.ENUMERATION] = defaultProcessor;\n    return {\n      constructor: JSONSchemaConverter,\n      convert: function (schema) {\n        if (schema) {\n          var rules = {};\n\n          _.each(schema.properties, function (validation, property) {\n            rules[property] = _.reduce(validation, function (rules, standard, rule) {\n              if (!processors[rule]) {\n                return rules;\n              }\n\n              var processed = processors[rule].call(null, standard, rule);\n              rules[processed.rule] = processed.standard;\n              return rules;\n            }, {});\n            rules[property][RULES.REQUIRED] = _.indexOf(schema.required, property) !== -1;\n          });\n\n          return rules;\n        }\n\n        return null;\n      }\n    };\n  }();\n\n  Validator.convertSchema = new JSONSchemaConverter().convert;\n  return Validator;\n});","map":{"version":3,"sources":["S:/Parking Management System/Parking-Management-System/frontend/react-frontend/node_modules/validator-js/src/validator.js"],"names":["root","factory","isCJS","module","exports","isAMD","define","amd","_","require","Validator","global","options","rules","extend","prototype","valueExists","value","isUndefined","isNull","constructor","validate","self","valuesList","isObject","__single__","rulesList","errorsList","each","field","errors","result","mustReport","has","standard","rule","call","push","console","warn","regexp","RegExp","test","Array","indexOf","number","parseInt","length","JSONSchemaConverter","RULES","STRING","NUMBER","INTEGER","BOOLEAN","REGEXP","MINIMUM","MAXIMUM","MIN_LENGTH","MAX_LENGTH","REQUIRED","ENUMERATION","SCHEMA_VALIDATIONS","TYPE","SCHEMA_TYPES","defaultProcessor","map","processors","convert","schema","properties","validation","property","reduce","processed","required","convertSchema"],"mappings":"AAAA,CAAC,UAASA,IAAT,EAAeC,OAAf,EAAwB;AAErB;AACA,MAAIC,KAAK,GAAG,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,OAApD;AAAA,MACIC,KAAK,GAAG,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,GAAd,KAAsB,QAAtD,IAAkED,MAAM,CAACC,GADrF;;AAGA,MAAIL,KAAJ,EAAW;AACP,QAAIM,CAAC,GAAGC,OAAO,CAAC,YAAD,CAAf;;AACAN,IAAAA,MAAM,CAACC,OAAP,GAAiBH,OAAO,CAACD,IAAD,EAAOQ,CAAP,CAAxB;AACH,GAHD,MAGO,IAAIH,KAAJ,EAAW;AACdC,IAAAA,MAAM,CAAC,CAAC,YAAD,CAAD,EAAiB,UAASE,CAAT,EAAY;AAC/B,aAAOP,OAAO,CAACD,IAAD,EAAOQ,CAAP,CAAd;AACH,KAFK,CAAN;AAGH,GAJM,MAIA;AACHR,IAAAA,IAAI,CAACU,SAAL,GAAiBT,OAAO,CAACD,IAAD,EAAOA,IAAI,CAACQ,CAAZ,CAAxB;AACH;AAEJ,CAjBD,EAiBG,IAjBH,EAiBS,UAASG,MAAT,EAAiBH,CAAjB,EAAoB;AAEzB;;AAEA,MAAIE,SAAS,GAAG,UAASE,OAAT,EAChB;AACIA,IAAAA,OAAO,KAAKA,OAAO,GAAG,EAAf,CAAP;;AAEA,QAAIA,OAAO,CAACC,KAAZ,EAAmB;AACfL,MAAAA,CAAC,CAACM,MAAF,CAAS,KAAKD,KAAd,EAAqBD,OAAO,CAACC,KAA7B;AACH;AACJ,GAPD;;AASAH,EAAAA,SAAS,CAACK,SAAV,GAAuB,YAAW;AAE9B;AACA,QAAIC,WAAW,GAAG,UAASC,KAAT,EAAgB;AAC9B,aAAO,EAAET,CAAC,CAACU,WAAF,CAAcD,KAAd,KAAwBT,CAAC,CAACW,MAAF,CAASF,KAAT,CAA1B,CAAP;AACH,KAFD;;AAIA,WAAO;AACHG,MAAAA,WAAW,EAAEV,SADV;AAGHW,MAAAA,QAAQ,EAAE,UAASJ,KAAT,EAAgBJ,KAAhB,EAAuBD,OAAvB,EACV;AACIA,QAAAA,OAAO,KAAKA,OAAO,GAAG,EAAf,CAAP;AAEA,YAAIU,IAAI,GAAG,IAAX;AAAA,YACIC,UAAU,GAAG,CAACf,CAAC,CAACgB,QAAF,CAAWP,KAAX,CAAD,GAAqB;AAACQ,UAAAA,UAAU,EAAER;AAAb,SAArB,GAA2CA,KAD5D;AAAA,YAEIS,SAAS,GAAI,CAAClB,CAAC,CAACgB,QAAF,CAAWP,KAAX,CAAD,GAAqB;AAACQ,UAAAA,UAAU,EAAEZ;AAAb,SAArB,GAA2CA,KAF5D;AAAA,YAGIc,UAAU,GAAG,EAHjB;;AAMAnB,QAAAA,CAAC,CAACoB,IAAF,CAAOF,SAAP,EAAkB,UAASb,KAAT,EAAgBgB,KAAhB,EAAuB;AACrC,cAAIC,MAAM,GAAGH,UAAU,CAACE,KAAD,CAAV,GAAoB,EAAjC;AAAA,cACIZ,KAAK,GAAIT,CAAC,CAACuB,MAAF,CAASR,UAAT,EAAqBM,KAArB,CADb;AAAA,cAEI;AACAG,UAAAA,UAAU,GAAG,EAAGhB,WAAW,CAACC,KAAD,CAAX,KAAuB,KAAvB,IAAgCT,CAAC,CAACyB,GAAF,CAAMpB,KAAN,EAAa,UAAb,MAA6B,IAA7D,IAAqEL,CAAC,CAACuB,MAAF,CAASlB,KAAT,EAAgB,UAAhB,MAAgC,KAAxG,CAHjB;;AAKAmB,UAAAA,UAAU,IAAIxB,CAAC,CAACoB,IAAF,CAAOf,KAAP,EAAc,UAASqB,QAAT,EAAmBC,IAAnB,EAAyB;AACjD,gBAAI3B,CAAC,CAACyB,GAAF,CAAMX,IAAI,CAACT,KAAX,EAAkBsB,IAAlB,CAAJ,EAA6B;AACzB,kBAAIb,IAAI,CAACT,KAAL,CAAWsB,IAAX,EAAiBC,IAAjB,CAAsBd,IAAtB,EAA4BL,KAA5B,EAAmCiB,QAAnC,EAA6CX,UAA7C,MAA6D,KAAjE,EAAwE;AACpEO,gBAAAA,MAAM,CAACO,IAAP,CAAY;AACRpB,kBAAAA,KAAK,EAAKA,KADF;AAERkB,kBAAAA,IAAI,EAAMA,IAFF;AAGRD,kBAAAA,QAAQ,EAAEA;AAHF,iBAAZ;AAKH;AAEJ,aATD,MASO;AACHI,cAAAA,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAa,oCAAb,EAAmDJ,IAAnD,CAAX;AACH;AACJ,WAba,CAAd;AAcH,SApBD;;AAuBA,eAAO,CAAC3B,CAAC,CAACgB,QAAF,CAAWP,KAAX,CAAD,GAAqBU,UAAU,CAACF,UAAhC,GAA6CE,UAApD;AACH,OArCE;AAuCHd,MAAAA,KAAK,EAAE;AACH,iBAAS,UAASI,KAAT,EAAgBiB,QAAhB,EACT;AACI,cAAIM,MAAM,GAAG,IAAIC,MAAJ,CAAW,oDAAX,EAAiE,GAAjE,CAAb;AACA,iBAAO,KAAK5B,KAAL,CAAW2B,MAAX,CAAkBvB,KAAlB,EAAyBuB,MAAzB,KAAoCN,QAA3C;AACH,SALE;AAOH,oBAAY,UAASjB,KAAT,EAAgBiB,QAAhB,EACZ;AACI,cAAIM,MAAM,GAAG,iBAAb;AACA,iBAAO,KAAK3B,KAAL,CAAW2B,MAAX,CAAkBvB,KAAlB,EAAyBuB,MAAzB,KAAoCN,QAA3C;AACH,SAXE;AAaH,kBAAU,UAASjB,KAAT,EAAgBiB,QAAhB,EACV;AACI;AAEA,iBAAO,OAAOjB,KAAP,IAAgB,QAAvB;AACH,SAlBE;AAoBH,mBAAW,UAASA,KAAT,EAAgBiB,QAAhB,EACX;AACI,iBAAO,OAAOjB,KAAP,IAAgB,SAAhB,IAA6BiB,QAAQ,KAAK,IAAjD;AACH,SAvBE;AAyBH,kBAAU,UAASjB,KAAT,EAAgBiB,QAAhB,EACV;AACI;AAEA,iBAAO,OAAOjB,KAAP,IAAgB,QAAhB,IAA4BiB,QAAQ,IAAI,IAA/C;AACH,SA9BE;AAgCH,mBAAW,UAASjB,KAAT,EAAgBiB,QAAhB,EACX;AACI,iBAAO,OAAOjB,KAAP,IAAgB,QAAhB,IAA4BA,KAAK,GAAG,CAAR,IAAa,CAAzC,IAA8CiB,QAAQ,IAAI,IAAjE;AACH,SAnCE;AAqCH,kBAAU,UAASjB,KAAT,EAAgBiB,QAAhB,EACV;AACI,cAAIM,MAAM,GAAGN,QAAQ,YAAYO,MAApB,GAA6BP,QAA7B,GAAwC,IAAIO,MAAJ,CAAWP,QAAX,CAArD;;AAEA,cAAI,OAAOjB,KAAP,IAAgB,QAApB,EAA8B;AAC1B,mBAAOuB,MAAM,CAACE,IAAP,CAAYzB,KAAZ,CAAP;AACH,WAFD,MAEO;AACH,mBAAO,KAAP;AACH;AACJ,SA9CE;AAgDH,gBAAQ,UAASA,KAAT,EAAgBiB,QAAhB,EACR;AACI,cAAIA,QAAQ,YAAYS,KAAxB,EAA+B;AAC3B,mBAAOnC,CAAC,CAACoC,OAAF,CAAUV,QAAV,EAAoBjB,KAApB,KAA8B,CAAC,CAAtC;AACH,WAFD,MAEO;AACH,mBAAO,KAAP;AACH;AACJ,SAvDE;AAyDH,mBAAW,UAASA,KAAT,EAAgBiB,QAAhB,EACX;AACI,cAAI,CAAC,KAAKrB,KAAL,CAAWgC,MAAX,CAAkBT,IAAlB,CAAuB,IAAvB,EAA6BnB,KAA7B,EAAoC,IAApC,CAAL,EAAgD;AAC5C,mBAAO,KAAP;AACH;;AAED,cAAI4B,MAAM,GAAGC,QAAQ,CAAC7B,KAAD,EAAQ,EAAR,CAArB;AAEA,iBAAO4B,MAAM,IAAIX,QAAjB;AACH,SAlEE;AAoEH,mBAAW,UAASjB,KAAT,EAAgBiB,QAAhB,EACX;AACI,cAAI,CAAC,KAAKrB,KAAL,CAAWgC,MAAX,CAAkBT,IAAlB,CAAuB,IAAvB,EAA6BnB,KAA7B,EAAoC,IAApC,CAAL,EAAgD;AAC5C,mBAAO,KAAP;AACH;;AAED,cAAI4B,MAAM,GAAGC,QAAQ,CAAC7B,KAAD,EAAQ,EAAR,CAArB;AAEA,iBAAO4B,MAAM,IAAIX,QAAjB;AACH,SA7EE;AA+EH,qBAAa,UAASjB,KAAT,EAAgBiB,QAAhB,EACb;AACI,cAAI,OAAOjB,KAAP,IAAgB,QAApB,EAA8B;AAC1B,mBAAOA,KAAK,CAAC8B,MAAN,IAAgBb,QAAvB;AACH;;AAED,iBAAO,KAAP;AACH,SAtFE;AAwFH,qBAAa,UAASjB,KAAT,EAAgBiB,QAAhB,EACb;AACI,cAAI,OAAOjB,KAAP,IAAgB,QAApB,EAA8B;AAC1B,mBAAOA,KAAK,CAAC8B,MAAN,IAAgBb,QAAvB;AACH;;AAED,iBAAO,KAAP;AACH,SA/FE;AAiGH,oBAAY,UAASjB,KAAT,EAAgBiB,QAAhB,EACZ;AACI,cAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACnB,mBAAOlB,WAAW,CAACC,KAAD,CAAlB;AACH;;AAED,iBAAO,IAAP;AACH;AAxGE;AAvCJ,KAAP;AAkJH,GAzJqB,EAAtB;;AA6JA,MAAI+B,mBAAmB,GAAG,YAAW,CAEpC,CAFD;;AAIAA,EAAAA,mBAAmB,CAACjC,SAApB,GAAiC,YAAW;AACxC,QAAIkC,KAAK,GAAG;AACRC,MAAAA,MAAM,EAAO,QADL;AAERC,MAAAA,MAAM,EAAO,QAFL;AAGRC,MAAAA,OAAO,EAAM,SAHL;AAIRC,MAAAA,OAAO,EAAM,SAJL;AAKRC,MAAAA,MAAM,EAAO,QALL;AAMRC,MAAAA,OAAO,EAAM,SANL;AAORC,MAAAA,OAAO,EAAM,SAPL;AAQRC,MAAAA,UAAU,EAAG,WARL;AASRC,MAAAA,UAAU,EAAG,WATL;AAURC,MAAAA,QAAQ,EAAK,UAVL;AAWRC,MAAAA,WAAW,EAAE;AAXL,KAAZ;AAcA,QAAIC,kBAAkB,GAAG;AACrBC,MAAAA,IAAI,EAAS,MADQ;AAErBP,MAAAA,OAAO,EAAM,SAFQ;AAGrBC,MAAAA,OAAO,EAAM,SAHQ;AAIrBC,MAAAA,UAAU,EAAG,WAJQ;AAKrBC,MAAAA,UAAU,EAAG,WALQ;AAMrBJ,MAAAA,MAAM,EAAO,SANQ;AAOrBK,MAAAA,QAAQ,EAAK,UAPQ;AAQrBC,MAAAA,WAAW,EAAE;AARQ,KAAzB;AAWA,QAAIG,YAAY,GAAG;AACfb,MAAAA,MAAM,EAAG,QADM;AAEfC,MAAAA,MAAM,EAAG,QAFM;AAGfC,MAAAA,OAAO,EAAE,SAHM;AAIfC,MAAAA,OAAO,EAAE;AAJM,KAAnB;;AAOA,QAAIW,gBAAgB,GAAI,YAAW;AAC/B,UAAIC,GAAG,GAAG,EAAV;AACIA,MAAAA,GAAG,CAACJ,kBAAkB,CAACN,OAApB,CAAH,GAAsCN,KAAK,CAACM,OAA5C;AACAU,MAAAA,GAAG,CAACJ,kBAAkB,CAACL,OAApB,CAAH,GAAsCP,KAAK,CAACO,OAA5C;AACAS,MAAAA,GAAG,CAACJ,kBAAkB,CAACJ,UAApB,CAAH,GAAsCR,KAAK,CAACQ,UAA5C;AACAQ,MAAAA,GAAG,CAACJ,kBAAkB,CAACH,UAApB,CAAH,GAAsCT,KAAK,CAACS,UAA5C;AACAO,MAAAA,GAAG,CAACJ,kBAAkB,CAACP,MAApB,CAAH,GAAsCL,KAAK,CAACK,MAA5C;AACAW,MAAAA,GAAG,CAACJ,kBAAkB,CAACD,WAApB,CAAH,GAAsCX,KAAK,CAACW,WAA5C;AAEJ,aAAO,UAAS3C,KAAT,EAAgBkB,IAAhB,EAAsB;AACzB,eAAO;AACHA,UAAAA,IAAI,EAAE8B,GAAG,CAAC9B,IAAD,CADN;AAEHD,UAAAA,QAAQ,EAAEjB;AAFP,SAAP;AAIH,OALD;AAMH,KAfsB,EAAvB;;AAiBA,QAAIiD,UAAU,GAAG,EAAjB;;AAEAA,IAAAA,UAAU,CAACL,kBAAkB,CAACC,IAApB,CAAV,GAAuC,YAAW;AAC9C,UAAIG,GAAG,GAAG,EAAV;AACIA,MAAAA,GAAG,CAACF,YAAY,CAACb,MAAd,CAAH,GAA4BD,KAAK,CAACC,MAAlC;AACAe,MAAAA,GAAG,CAACF,YAAY,CAACZ,MAAd,CAAH,GAA4BF,KAAK,CAACE,MAAlC;AACAc,MAAAA,GAAG,CAACF,YAAY,CAACX,OAAd,CAAH,GAA4BH,KAAK,CAACG,OAAlC;AACAa,MAAAA,GAAG,CAACF,YAAY,CAACV,OAAd,CAAH,GAA4BJ,KAAK,CAACI,OAAlC;AAEJ,aAAO,UAASpC,KAAT,EAAgB;AACnB,eAAO;AACHkB,UAAAA,IAAI,EAAM8B,GAAG,CAAChD,KAAD,CADV;AAEHiB,UAAAA,QAAQ,EAAE;AAFP,SAAP;AAIH,OALD;AAMH,KAbqC,EAAtC;;AAeAgC,IAAAA,UAAU,CAACL,kBAAkB,CAACN,OAApB,CAAV,GAA6CS,gBAA7C;AACAE,IAAAA,UAAU,CAACL,kBAAkB,CAACL,OAApB,CAAV,GAA6CQ,gBAA7C;AACAE,IAAAA,UAAU,CAACL,kBAAkB,CAACJ,UAApB,CAAV,GAA6CO,gBAA7C;AACAE,IAAAA,UAAU,CAACL,kBAAkB,CAACH,UAApB,CAAV,GAA6CM,gBAA7C;AACAE,IAAAA,UAAU,CAACL,kBAAkB,CAACP,MAApB,CAAV,GAA6CU,gBAA7C;AACAE,IAAAA,UAAU,CAACL,kBAAkB,CAACD,WAApB,CAAV,GAA6CI,gBAA7C;AAEA,WAAO;AACH5C,MAAAA,WAAW,EAAE4B,mBADV;AAGHmB,MAAAA,OAAO,EAAE,UAASC,MAAT,EAAiB;AACtB,YAAIA,MAAJ,EAAY;AACR,cAAIvD,KAAK,GAAG,EAAZ;;AAEAL,UAAAA,CAAC,CAACoB,IAAF,CAAOwC,MAAM,CAACC,UAAd,EAA0B,UAASC,UAAT,EAAqBC,QAArB,EAA+B;AACrD1D,YAAAA,KAAK,CAAC0D,QAAD,CAAL,GAAkB/D,CAAC,CAACgE,MAAF,CAASF,UAAT,EAAqB,UAASzD,KAAT,EAAgBqB,QAAhB,EAA0BC,IAA1B,EAAgC;AACnE,kBAAI,CAAC+B,UAAU,CAAC/B,IAAD,CAAf,EAAuB;AACnB,uBAAOtB,KAAP;AACH;;AAED,kBAAI4D,SAAS,GAAGP,UAAU,CAAC/B,IAAD,CAAV,CAAiBC,IAAjB,CAAsB,IAAtB,EAA4BF,QAA5B,EAAsCC,IAAtC,CAAhB;AACAtB,cAAAA,KAAK,CAAC4D,SAAS,CAACtC,IAAX,CAAL,GAAwBsC,SAAS,CAACvC,QAAlC;AAEA,qBAAOrB,KAAP;AACH,aATiB,EASf,EATe,CAAlB;AAWAA,YAAAA,KAAK,CAAC0D,QAAD,CAAL,CAAgBtB,KAAK,CAACU,QAAtB,IAAkCnD,CAAC,CAACoC,OAAF,CAAUwB,MAAM,CAACM,QAAjB,EAA2BH,QAA3B,MAAyC,CAAC,CAA5E;AACH,WAbD;;AAeA,iBAAO1D,KAAP;AACH;;AAED,eAAO,IAAP;AACH;AA1BE,KAAP;AA4BH,GAtG+B,EAAhC;;AAyGAH,EAAAA,SAAS,CAACiE,aAAV,GAA2B,IAAI3B,mBAAJ,EAAD,CAA0BmB,OAApD;AAEA,SAAOzD,SAAP;AACH,CA3SD","sourcesContent":["(function(root, factory) {\n\n    // Detect the environment of usage\n    var isCJS = typeof module !== \"undefined\" && module.exports,\n        isAMD = typeof define === 'function' && typeof define.amd === 'object' && define.amd;\n\n    if (isCJS) {\n        var _ = require(\"underscore\");\n        module.exports = factory(root, _);\n    } else if (isAMD) {\n        define(['underscore'], function(_) {\n            return factory(root, _);\n        });\n    } else {\n        root.Validator = factory(root, root._);\n    }\n\n})(this, function(global, _) {\n\n    \"use strict\";\n\n    var Validator = function(options)\n    {\n        options || (options = {});\n\n        if (options.rules) {\n            _.extend(this.rules, options.rules);\n        }\n    };\n\n    Validator.prototype = (function() {\n\n        // Common value checker\n        var valueExists = function(value) {\n            return !(_.isUndefined(value) || _.isNull(value));\n        };\n\n        return {\n            constructor: Validator,\n\n            validate: function(value, rules, options)\n            {\n                options || (options = {});\n\n                var self = this,\n                    valuesList = !_.isObject(value) ? {__single__: value} : value,\n                    rulesList  = !_.isObject(value) ? {__single__: rules} : rules,\n                    errorsList = {};\n\n\n                _.each(rulesList, function(rules, field) {\n                    var errors = errorsList[field] = [],\n                        value  = _.result(valuesList, field),\n                        // We pass reporting, if value is null or undefined, and required rule is set to FALSE\n                        mustReport = !( valueExists(value) === false && _.has(rules, 'required') === true && _.result(rules, 'required') === false );\n\n                    mustReport && _.each(rules, function(standard, rule) {\n                        if (_.has(self.rules, rule)) {\n                            if (self.rules[rule].call(self, value, standard, valuesList) === false) {\n                                errors.push({\n                                    value:    value,\n                                    rule:     rule,\n                                    standard: standard\n                                });\n                            }\n\n                        } else {\n                            console && console.warn(\"Validation rule '%s' is not exists\", rule);\n                        }\n                    });\n                });\n\n\n                return !_.isObject(value) ? errorsList.__single__ : errorsList;\n            },\n\n            rules: {\n                \"email\": function(value, standard)\n                {\n                    var regexp = new RegExp(\"^[a-z0-9._%-]+@[a-z0-9.-]*[a-z0-9]{1}\\.[a-z]{2,4}$\", \"i\");\n                    return this.rules.regexp(value, regexp) == standard;\n                },\n\n                \"russians\": function(value, standard)\n                {\n                    var regexp = /^[А-Яа-яёЁ\\W]$/i;\n                    return this.rules.regexp(value, regexp) == standard;\n                },\n\n                \"string\": function(value, standard)\n                {\n                    //var regexp = /^([^\\\"\\\\]*|\\\\([\"\\\\\\/bfnrt]{1}|u[a-f0-9]{4}))*$/;\n\n                    return typeof value == \"string\";\n                },\n\n                \"boolean\": function(value, standard)\n                {\n                    return typeof value == \"boolean\" && standard === true;\n                },\n\n                \"number\": function(value, standard)\n                {\n                    //var regexp = /^-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?$/;\n\n                    return typeof value == \"number\" && standard == true;\n                },\n\n                \"integer\": function(value, standard)\n                {\n                    return typeof value == \"number\" && value % 1 == 0 && standard == true;\n                },\n\n                \"regexp\": function(value, standard)\n                {\n                    var regexp = standard instanceof RegExp ? standard : new RegExp(standard);\n\n                    if (typeof value == 'string') {\n                        return regexp.test(value);\n                    } else {\n                        return false;\n                    }\n                },\n\n                \"enum\": function(value, standard)\n                {\n                    if (standard instanceof Array) {\n                        return _.indexOf(standard, value) != -1;\n                    } else {\n                        return false;\n                    }\n                },\n\n                \"minimum\": function(value, standard)\n                {\n                    if (!this.rules.number.call(this, value, true)) {\n                        return false;\n                    }\n\n                    var number = parseInt(value, 10);\n\n                    return number >= standard;\n                },\n\n                \"maximum\": function(value, standard)\n                {\n                    if (!this.rules.number.call(this, value, true)) {\n                        return false;\n                    }\n\n                    var number = parseInt(value, 10);\n\n                    return number <= standard;\n                },\n\n                \"minlength\": function(value, standard)\n                {\n                    if (typeof value == 'string') {\n                        return value.length >= standard;\n                    }\n\n                    return false;\n                },\n\n                \"maxlength\": function(value, standard)\n                {\n                    if (typeof value == 'string') {\n                        return value.length <= standard;\n                    }\n\n                    return false;\n                },\n\n                \"required\": function(value, standard)\n                {\n                    if (standard === true) {\n                        return valueExists(value);\n                    }\n\n                    return true;\n                }\n            }\n        }\n    })();\n\n\n\n    var JSONSchemaConverter = function() {\n\n    };\n\n    JSONSchemaConverter.prototype = (function() {\n        var RULES = {\n            STRING:      \"string\",\n            NUMBER:      \"number\",\n            INTEGER:     \"integer\",\n            BOOLEAN:     \"boolean\",\n            REGEXP:      \"regexp\",\n            MINIMUM:     \"minimum\",\n            MAXIMUM:     \"maximum\",\n            MIN_LENGTH:  \"minlength\",\n            MAX_LENGTH:  \"maxlength\",\n            REQUIRED:    \"required\",\n            ENUMERATION: \"enum\"\n        };\n\n        var SCHEMA_VALIDATIONS = {\n            TYPE:        \"type\",\n            MINIMUM:     \"minimum\",\n            MAXIMUM:     \"maximum\",\n            MIN_LENGTH:  \"minLength\",\n            MAX_LENGTH:  \"maxLength\",\n            REGEXP:      \"pattern\",\n            REQUIRED:    \"required\",\n            ENUMERATION: \"enum\"\n        };\n\n        var SCHEMA_TYPES = {\n            STRING:  \"string\",\n            NUMBER:  \"number\",\n            INTEGER: \"integer\",\n            BOOLEAN: \"boolean\"\n        };\n\n        var defaultProcessor = (function() {\n            var map = {};\n                map[SCHEMA_VALIDATIONS.MINIMUM]     = RULES.MINIMUM;\n                map[SCHEMA_VALIDATIONS.MAXIMUM]     = RULES.MAXIMUM;\n                map[SCHEMA_VALIDATIONS.MIN_LENGTH]  = RULES.MIN_LENGTH;\n                map[SCHEMA_VALIDATIONS.MAX_LENGTH]  = RULES.MAX_LENGTH;\n                map[SCHEMA_VALIDATIONS.REGEXP]      = RULES.REGEXP;\n                map[SCHEMA_VALIDATIONS.ENUMERATION] = RULES.ENUMERATION;\n\n            return function(value, rule) {\n                return {\n                    rule: map[rule],\n                    standard: value\n                };\n            };\n        })();\n\n        var processors = {};\n\n        processors[SCHEMA_VALIDATIONS.TYPE] = (function() {\n            var map = {};\n                map[SCHEMA_TYPES.STRING]  = RULES.STRING;\n                map[SCHEMA_TYPES.NUMBER]  = RULES.NUMBER;\n                map[SCHEMA_TYPES.INTEGER] = RULES.INTEGER;\n                map[SCHEMA_TYPES.BOOLEAN] = RULES.BOOLEAN;\n\n            return function(value) {\n                return {\n                    rule:     map[value],\n                    standard: true\n                };\n            };\n        })();\n\n        processors[SCHEMA_VALIDATIONS.MINIMUM]     = defaultProcessor;\n        processors[SCHEMA_VALIDATIONS.MAXIMUM]     = defaultProcessor;\n        processors[SCHEMA_VALIDATIONS.MIN_LENGTH]  = defaultProcessor;\n        processors[SCHEMA_VALIDATIONS.MAX_LENGTH]  = defaultProcessor;\n        processors[SCHEMA_VALIDATIONS.REGEXP]      = defaultProcessor;\n        processors[SCHEMA_VALIDATIONS.ENUMERATION] = defaultProcessor;\n\n        return {\n            constructor: JSONSchemaConverter,\n\n            convert: function(schema) {\n                if (schema) {\n                    var rules = {};\n\n                    _.each(schema.properties, function(validation, property) {\n                        rules[property] = _.reduce(validation, function(rules, standard, rule) {\n                            if (!processors[rule]) {\n                                return rules;\n                            }\n\n                            var processed = processors[rule].call(null, standard, rule);\n                            rules[processed.rule] = processed.standard;\n\n                            return rules;\n                        }, {});\n\n                        rules[property][RULES.REQUIRED] = _.indexOf(schema.required, property) !== -1;\n                    });\n\n                    return rules;\n                }\n\n                return null;\n            }\n        }\n    })();\n\n\n    Validator.convertSchema = (new JSONSchemaConverter).convert;\n\n    return Validator;\n});"]},"metadata":{},"sourceType":"script"}