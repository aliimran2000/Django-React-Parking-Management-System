{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"S:\\\\Parking Management System\\\\Parking-Management-System\\\\frontend\\\\react-frontend\\\\src\\\\Views\\\\RegisterMember.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { useState } from 'react';\nimport InputMask from 'react-input-mask';\nimport validator from 'validator';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport PersistentDrawerLeft from '../Components/Drawer';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport default function RegisterMember(props) {\n  _s();\n\n  const [first_name, setfirst_name] = useState('');\n  const [last_name, setlast_name] = useState('');\n  const [Address, setAddress] = useState('');\n  const [CNIC, setCNIC] = useState('');\n  const [Phone_No, setPhone] = useState('');\n  const [DateOfBirth, setDateOfBirth] = useState();\n  const [username, setUser] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [errorState, SeterrorState] = useState(true);\n\n  function alphanumeric(value) {\n    if (value.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+[0-9a-z]+$/i)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function checkpassstrength(value) {\n    if (value.length < 8 || !alphanumeric(value)) {\n      SeterrorState(true);\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"Password must contain atleast 8 letters and must be alphanumeric\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this);\n    } else {\n      SeterrorState(false);\n    }\n  }\n\n  const emailtest = value => {\n    if (!validator.isEmail(value)) {\n      SeterrorState(true);\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"Invalid Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this);\n    } else {\n      SeterrorState(false);\n    }\n  };\n\n  function SubmitButtonDisplay() {\n    if (!errorState) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: useStyles.submit //onClick={(event)=>{HandleRequest()}}\n        ,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: useStyles.submit,\n        disabled: true,\n        children: \"Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PersistentDrawerLeft, {\n      message: \"Register Member\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        spacing: 2,\n        m: 10,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          md: true,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: 450\n            },\n            required: true,\n            label: \"First Name\",\n            variant: \"outlined\",\n            value: first_name,\n            onChange: event => {\n              setfirst_name(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              width: 450\n            },\n            required: true,\n            label: \"Last Name\",\n            variant: \"outlined\",\n            value: last_name,\n            onChange: event => {\n              setlast_name(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(InputMask, {\n            mask: \"99999-9999999-9\",\n            maskChar: \" \",\n            value: CNIC,\n            onChange: event => {\n              setCNIC(event.target.value.replaceAll(\"-\", \"\"));\n            },\n            children: () => /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              label: \"CNIC\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(InputMask, {\n            mask: \"9999-9999999\",\n            maskChar: \" \",\n            value: Phone_No,\n            onChange: event => {\n              setPhone(event.target.value.replace(\"-\", \"\"));\n            },\n            children: () => /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              label: \"Mobile Number\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            label: \"Address\",\n            multiline: true,\n            rows: 4,\n            value: Address,\n            onChange: event => {\n              setAddress(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Date of Birth\",\n            type: \"date\",\n            defaultValue: \"2000-01-01\",\n            value: DateOfBirth,\n            onChange: event => {\n              setDateOfBirth(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            value: email,\n            onChange: event => {\n              setEmail(event.target.value);\n            },\n            label: \"E Mail\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this), emailtest]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            value: username,\n            onChange: event => {\n              setUser(event.target.value);\n            },\n            label: \"User ID\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            value: password,\n            onChange: event => {\n              setPassword(event.target.value);\n              checkpassstrength(password);\n            },\n            label: \"Password\",\n            variant: \"outlined\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), SubmitButtonDisplay()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RegisterMember, \"Sc/zS4wB5665NUBd0yJeQPBTZa8=\");\n\n_c = RegisterMember;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterMember\");","map":{"version":3,"sources":["S:/Parking Management System/Parking-Management-System/frontend/react-frontend/src/Views/RegisterMember.js"],"names":["React","Typography","makeStyles","TextField","Grid","useState","InputMask","validator","Button","Container","Box","PersistentDrawerLeft","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","RegisterMember","props","first_name","setfirst_name","last_name","setlast_name","Address","setAddress","CNIC","setCNIC","Phone_No","setPhone","DateOfBirth","setDateOfBirth","username","setUser","password","setPassword","email","setEmail","errorState","SeterrorState","alphanumeric","value","match","checkpassstrength","length","emailtest","isEmail","SubmitButtonDisplay","event","target","replaceAll","replace"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Typography} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useState } from 'react';\r\nimport InputMask from 'react-input-mask';\r\nimport validator from 'validator';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport PersistentDrawerLeft from '../Components/Drawer'\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n  }));\r\n  \r\n\r\n\r\nexport default function RegisterMember(props){\r\n\r\n    \r\n    const [first_name,setfirst_name] = useState('');\r\n    const [last_name,setlast_name] = useState(''); \r\n    const [Address,setAddress] = useState('');\r\n    const [CNIC, setCNIC] = useState('');\r\n    const [Phone_No,setPhone] = useState('');\r\n    const [DateOfBirth,setDateOfBirth] = useState();\r\n    const [username,setUser] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n    const [email,setEmail] = useState(\"\");\r\n    const [errorState,SeterrorState] = useState(true);\r\n\r\n\r\n    function alphanumeric(value){\r\n       if(value.match(/((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+[0-9a-z]+$/i)){\r\n            return true\r\n        }\r\n        \r\n        return false\r\n\r\n    }\r\n\r\n\r\n    function checkpassstrength(value){\r\n        \r\n        if((value.length < 8) || !alphanumeric(value) )\r\n        {\r\n            SeterrorState(true)\r\n            return(\r\n                <Typography color=\"error\">\r\n                    Password must contain atleast 8 letters and must be alphanumeric       \r\n                </Typography>\r\n            )\r\n        }\r\n        else{\r\n            SeterrorState(false)\r\n        }\r\n    }\r\n\r\n    const emailtest = (value)=>{\r\n        \r\n        if(!validator.isEmail(value)){\r\n            SeterrorState(true)\r\n            return (\r\n                <Typography color=\"error\">\r\n                    Invalid Email\r\n                </Typography>\r\n            )\r\n        }else{\r\n            SeterrorState(false)\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    function SubmitButtonDisplay(){\r\n        if(!errorState){\r\n            return( \r\n                <Button fullWidth variant=\"contained\" color=\"primary\" className={useStyles.submit}//onClick={(event)=>{HandleRequest()}}\r\n                 >\r\n                Submit \r\n                </Button>\r\n                )\r\n            }\r\n        else{\r\n            return(\r\n                <Button fullWidth variant=\"contained\" color=\"primary\" className={useStyles.submit} disabled >\r\n                Submit </Button>\r\n            )\r\n        }\r\n    }\r\n   \r\n    \r\n    \r\n    return(\r\n        <div>\r\n  \r\n        <PersistentDrawerLeft message=\"Register Member\"></PersistentDrawerLeft>\r\n        <Container component=\"main\" maxWidth=\"md\"> \r\n        <Box spacing={2} m={10}>\r\n        \r\n            <Grid container direction=\"row\" md>\r\n                <TextField style = {{width: 450}} required label=\"First Name\" variant=\"outlined\"  value={first_name} onChange={(event)=>{setfirst_name(event.target.value)}}/>\r\n                <TextField style = {{width: 450}} required label=\"Last Name\" variant=\"outlined\"   value={last_name} onChange={(event)=>{setlast_name(event.target.value)}}/> \r\n            </Grid>\r\n\r\n            <Grid>\r\n                <InputMask mask=\"99999-9999999-9\" maskChar=\" \" value={CNIC} onChange={(event)=>{setCNIC(event.target.value.replaceAll(\"-\",\"\"))}} >\r\n                    {()=><TextField required label=\"CNIC\" variant=\"outlined\" />}\r\n                </InputMask>\r\n            </Grid>\r\n\r\n            <Grid>\r\n                <InputMask mask=\"9999-9999999\" maskChar=\" \" value={Phone_No} onChange={(event)=>{setPhone(event.target.value.replace(\"-\",\"\"))}} >\r\n                    {()=><TextField required label=\"Mobile Number\" variant=\"outlined\" />}\r\n                </InputMask>\r\n            </Grid>\r\n            <Grid>\r\n                <TextField required label=\"Address\" multiline rows={4} value={Address} onChange={(event)=>{setAddress(event.target.value)}}/>\r\n            </Grid>\r\n        \r\n            <Grid>\r\n                <TextField  label=\"Date of Birth\" type=\"date\" defaultValue=\"2000-01-01\" value={DateOfBirth} onChange={(event)=>{setDateOfBirth(event.target.value)}}/>\r\n            </Grid>\r\n            \r\n            <Grid>\r\n                <TextField margin=\"normal\" required value={email} onChange={(event)=>{setEmail(event.target.value)}} label=\"E Mail\" variant=\"outlined\" />\r\n                {emailtest}\r\n            </Grid>\r\n\r\n            <Grid>\r\n                <TextField margin=\"normal\" required value={username} onChange={(event)=>{setUser(event.target.value)}} label=\"User ID\" variant=\"outlined\" />\r\n            </Grid>\r\n            \r\n            <Grid>\r\n                <TextField margin=\"normal\" required value={password} onChange={(event)=>{setPassword(event.target.value);checkpassstrength(password)}}  label=\"Password\" variant=\"outlined\" type=\"password\" />\r\n            </Grid>\r\n\r\n            {SubmitButtonDisplay()}\r\n\r\n            \r\n                \r\n        </Box>\r\n        </Container>\r\n        \r\n        </div>  \r\n    )\r\n\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}